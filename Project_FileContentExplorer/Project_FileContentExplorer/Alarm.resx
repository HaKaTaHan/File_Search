<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>